The CakeML project.  See http://www.cl.cam.ac.uk/~mom22/cakeml

Directory structure:

- semantics
    The definition of CakeML, including
    - its concrete syntax
    - its abstract syntax
    - small step semantics
    - big step semantics
    - a type system
    The definition is (mostly) expressed in Lem
    (http://www.cs.kent.ac.uk/~sao/lem), but the generated HOL is also
    included.

- implementation
    The compiler implementation

- metatheory
    Proofs about MiniML, including
    - type soundness
    - determinism
    - equivalence of the big and small step semantics

- translator
    A proof-producing translator from HOL functions to MiniML

- hol-light
    An implementation of Hol light (http://www.cl.cam.ac.uk/~jrh13/hol-light/)
    in CakeML

below here, refactor

- translator/okasaki-examples
    15 data structures/algorithms from Chris Okasaki's Purely Functional Data
    Structures.  The translator is applied to them, and 12 of the 15 are
    verified.

- translator/other-examples
    Example applications of the translator to existing examples, including AES,
    TEA, and RC6 from HOL/examples/Crypto; the probabilistic primality checker
    from examples/miller; and some examples in auxiliary.

- translator/other-examples/auxiliary
    A copying GC, 91 function, regular expression matched and SLR parser
    generator taken from other places, and ollected here for the translator.

- compiler
    The sketchy beginnings of a verified compiler from MiniML to ???

