The CakeML project.  See http://cakeml.org.

Directory structure:

- semantics
    The definition of CakeML, including
    - its concrete syntax
    - its abstract syntax
    - small step semantics
    - big step semantics
    - a type system
    The definition is (mostly) expressed in
    Lem (http://www.cs.kent.ac.uk/~sao/lem),
    but the generated HOL is also included.

- metatheory
    Proofs about CakeML, including
    - type soundness
    - determinism
    - equivalence of the big and small step semantics

- implementation
    The REPL implementation in HOL, including
      - the type inferencer implementation
      - definition of repl_fun : string -> repl_result
      - examples of evaluating repl_fun in the logic

- parsing
    Lexer and PEG parser for CakeML.

- compiler
    The middle of the compiler, translating from CakeML abstract syntax to bytecode.
    Includes:
      - the bytecode specification and evaluator
      - the compiler implementation (expressed in Lem)
      - compiler correctness proofs
      - rudimentary tests using EmitML
      - (steps towards) a compiler from bytecode to x86 machine code

- impl_proofs
    A proof of soundness for the type inferencer.

- translator
    A proof-producing translator from HOL functions to CakeML.

- hol-light
    An implementation of HOL Light (http://www.cl.cam.ac.uk/~jrh13/hol-light/)
    in CakeML.

--below here, refactor or describe--

- translator/okasaki-examples
    15 data structures/algorithms from Chris Okasaki's Purely Functional Data
    Structures.  The translator is applied to them, and 12 of the 15 are
    verified.

- translator/other-examples
    Example applications of the translator to existing examples, including AES,
    TEA, and RC6 from HOL/examples/Crypto; the probabilistic primality checker
    from examples/miller; and some examples in auxiliary.

- translator/other-examples/auxiliary
    A copying GC, 91 function, regular expression matched and SLR parser
    generator taken from other places, and ollected here for the translator.

- lexer

- computability
