INCLUDES = developers $(HOLDIR)/examples/formal-languages/context-free $(HOLDIR)/examples/fun-op-sem/lprefix_lub lem_lib_stub $(HOLDIR)/examples/machine-code/hoare-triple
OPTIONS = QUIT_ON_FAILURE

README_SOURCES = miscScript.sml COPYING developers build-instructions.sh lib.lem libScript.sml

THYFILES = $(patsubst %Script.sml,%Theory.uo,$(wildcard *.sml))
TARGETS = README.md $(patsubst %.sml,%.uo,$(THYFILES))
all: $(TARGETS)
.PHONY: all

LEMSRC = lib
LEMS = $(patsubst %,%.lem,$(LEMSRC))
GENS = $(patsubst %,%Script.sml,$(LEMSRC))

README.md: $(README_SOURCES) readmePrefix
	developers/readme_gen $(README_SOURCES)

$(GENS): $(LEMS)
	if type lem;\
	then lem $(LEM_OPT) -suppress_renaming -auxiliary_level none -hol $(LEMS);\
	else touch $(GENS); fi
