val alist_to_fmap : forall 'a 'b. list ('a * 'b) -> fmap 'a 'b
val LEAST : (num -> bool) -> num
val num_to_hex_string : num -> string
val FOLDL2 : forall 'a 'b 'c. ('a -> 'b -> 'c -> 'a) -> 'a -> list 'b -> list 'c -> 'a
val EVERY2 : forall 'a 'b. ('a -> 'b -> bool) -> list 'a -> list 'b -> bool
(* TODO: lem library can't handle option type *)
val OPTREL : forall 'a 'b 'c 'd. ('a -> 'b -> bool) -> 'c -> 'd -> bool
val FLOOKUP : forall 'a 'b 'c. fmap 'a 'b -> 'a -> 'c
val DOMSUB : forall 'a 'b. fmap 'a 'b -> 'a -> fmap 'a 'b
val int_of_num : num -> int
val GENLIST : forall 'a. (num -> 'a) -> num -> list 'a
val UNIT : forall 'a 'b. 'a -> 'b -> 'a * 'b
