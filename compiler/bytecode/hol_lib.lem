type char
val EXPLODE : string -> list char
val LEAST : (num -> bool) -> num
val IMAGE : forall 'a 'b. ('a -> 'b) -> set 'a -> set 'b
val PRE : num -> num
val count : num -> set num
val QSORT : forall 'a. ('a -> 'a -> bool) -> list 'a -> list 'a
val SUM : list num -> num
val o : forall 'a 'b 'c. ('b -> 'c) -> ('a -> 'b) -> ('a -> 'c)
val int_of_num : num -> int
val GENLIST : forall 'a. (num -> 'a) -> num -> list 'a
val num_to_dec_string : num -> string
val Num : int -> num
val int_neg : int -> int
val FLAT : list string -> string
val BUTLASTN : forall 'a. num -> list 'a -> list 'a
(* TODO: lem library can't handle option type *)
val o_f : forall 'a 'b 'c 'd. ('b -> 'c) -> 'a -> 'd
val IS_SOME : forall 'a. 'a -> bool
val IS_NONE : forall 'a. 'a -> bool
val THE : forall 'a 'b. 'a -> 'b
val OPTION_BIND : forall 'a 'b 'c. 'a -> ('b -> 'c) -> 'c
val OPTION_MAP : forall 'a 'b 'c 'd. ('a -> 'b) -> 'c -> 'd
val FLOOKUP : forall 'a 'b 'c. 'a -> 'b -> 'c
