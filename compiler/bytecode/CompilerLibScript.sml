(*Generated by Lem from compilerLib.lem.*)
open bossLib Theory Parse res_quanTheory
open fixedPointTheory finite_mapTheory listTheory pairTheory pred_setTheory
open integerTheory set_relationTheory sortingTheory stringTheory wordsTheory

val _ = numLib.prefer_num();



val _ = new_theory "CompilerLib"

(* TODO: these should be in the lem library *)

(*val genlist : forall 'a. (num -> 'a) -> num -> list 'a*)

(*val image : forall 'a 'b. ('a -> 'b) -> set 'a -> set 'b*)

(*val pre : num -> num*)

(*val count : num -> set num*)

(*val the : forall 'a 'b. 'a -> 'b*)

(*val drop : forall 'a. num -> list 'a -> list 'a*)

(*val least : (num -> bool) -> num*)

(*val int_of_num : num -> int*)

val _ = Define `
 i0 = ( int_of_num 0)`;

val _ = Define `
 i1 = ( int_of_num 1)`;

val _ = Define `
 i2 = ( int_of_num 2)`;


val _ = export_theory()

