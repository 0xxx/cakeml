val LEAST : (num -> bool) -> num
val IMAGE : forall 'a 'b. ('a -> 'b) -> set 'a -> set 'b
val PRE : num -> num
val count : num -> set num
val QSORT : forall 'a. ('a -> 'a -> bool) -> list 'a -> list 'a
val SUM : list num -> num
val o : forall 'a 'b 'c. ('b -> 'c) -> ('a -> 'b) -> ('a -> 'c)
(* TODO: lem library can't handle option type *)
val IS_SOME : forall 'a. 'a -> bool
val IS_NONE : forall 'a. 'a -> bool
val THE : forall 'a 'b. 'a -> 'b
val int_of_num : num -> int
val GENLIST : forall 'a. (num -> 'a) -> num -> list 'a
