OPTIONS = QUIT_ON_FAILURE
INCLUDES = .. ../ffi ../.. ../../lem_lib_stub $(HOLDIR)/examples/formal-languages/context-free

THYFILES = $(patsubst %Script.sml,%Theory.uo,$(wildcard *.sml))
TARGETS = $(patsubst %.sml,%.uo,$(THYFILES))
all: $(TARGETS) $(HOLHEAP)
.PHONY: all

SEMI = tokens ast semanticPrimitives evaluate typeSystem
SRC = typeSoundInvariants
LEMI = $(patsubst %,../%.lem,$(SEMI))
LEMS = $(patsubst %,%.lem,$(SRC))
GENS = $(patsubst %,%Script.sml,$(SRC))
LEM_OPT = -wl_unused_vars ign

$(GENS) : ../../lib.lem $(LEMI) $(LEMS) ../ffi/ffi.lem
	if type lem;\
	then lem $(LEM_OPT) -suppress_renaming -auxiliary_level none -i ../ffi/ffi.lem -i ../../lib.lem $(patsubst %,-i %,$(LEMI)) $(patsubst %,-hol %,$(LEMS));\
	else touch $(GENS); fi

ifdef POLY
HOLHEAP = heap
PARENTHEAP = ../heap
EXTRA_CLEANS = $(HOLHEAP) $(HOLHEAP).o

BARE_THYS = ../../libTheory ../evaluateTheory ../typeSystemTheory ../tokensTheory ../gramTheory ../terminationTheory ../semanticsComputeLib $(HOLDIR)/examples/formal-languages/context-free/NTpropertiesTheory
DEPS = $(patsubst %,%.uo,$(BARE_THYS)) $(PARENTHEAP)

$(HOLHEAP): $(DEPS)
	$(protect $(HOLDIR)/bin/buildheap) -b $(PARENTHEAP) -o $(HOLHEAP) $(BARE_THYS)
endif
