(*Generated by Lem from tokens.lem.*)
open HolKernel Parse boolLib bossLib;
open libTheory lem_pervasives_extraTheory;

val _ = numLib.prefer_num();



val _ = new_theory "tokens"

(*open import Lib*)
(*open import Pervasives_extra*)
val _ = Hol_datatype `
 token =
  AlphaT of string
| AndT
| AndalsoT
| ArrowT
| AsT
| BarT
| CaseT
| ColonT
| CommaT
| DarrowT
| DatatypeT
| DotsT
| ElseT
| EndT
| EqtypeT
| EqualsT
| ExceptionT
| FnT
| FunT
| HandleT
| HashT
| IfT
| InT
| IncludeT
| IntT of int
| LbraceT
| LbrackT
| LetT
| LexErrorT
| LocalT
| LongidT of string => string
| LparT
| OfT
| OpT
| OpenT
| OrelseT
| RaiseT
| RbraceT
| RbrackT
| RecT
| RparT
| SealT
| SemicolonT
| SharingT
| SigT
| SignatureT
| StarT
| StringT of string
| StructT
| StructureT
| SymbolT of string
| ThenT
| TypeT
| TyvarT of string
| UnderbarT
| ValT
| WhereT
| WithT
| WithtypeT
| WordT of word8`;

val _ = export_theory()

