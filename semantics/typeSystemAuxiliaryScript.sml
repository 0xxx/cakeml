(*Generated by Lem from typeSystem.lem.*)
open HolKernel Parse boolLib bossLib;
open pervasives_extraTheory libTheory astTheory typeSystemTheory;

val _ = numLib.prefer_num();



val _ = new_theory "typeSystemAuxiliary"


(****************************************************)
(*                                                  *)
(* Termination Proofs                               *)
(*                                                  *)
(****************************************************)

(* val gst = Defn.tgoal_no_defn (deBruijn_inc_def, deBruijn_inc_ind) *)
val (deBruijn_inc_rw, deBruijn_inc_ind_rw) =
  Defn.tprove_no_defn ((deBruijn_inc_def, deBruijn_inc_ind),
    (* the termination proof *)
  )
val deBruijn_inc_rw = save_thm ("deBruijn_inc_rw", deBruijn_inc_rw);
val deBruijn_inc_ind_rw = save_thm ("deBruijn_inc_ind_rw", deBruijn_inc_ind_rw);


(* val gst = Defn.tgoal_no_defn (deBruijn_subst_def, deBruijn_subst_ind) *)
val (deBruijn_subst_rw, deBruijn_subst_ind_rw) =
  Defn.tprove_no_defn ((deBruijn_subst_def, deBruijn_subst_ind),
    (* the termination proof *)
  )
val deBruijn_subst_rw = save_thm ("deBruijn_subst_rw", deBruijn_subst_rw);
val deBruijn_subst_ind_rw = save_thm ("deBruijn_subst_ind_rw", deBruijn_subst_ind_rw);


(* val gst = Defn.tgoal_no_defn (lookup_tenv_def, lookup_tenv_ind) *)
val (lookup_tenv_rw, lookup_tenv_ind_rw) =
  Defn.tprove_no_defn ((lookup_tenv_def, lookup_tenv_ind),
    (* the termination proof *)
  )
val lookup_tenv_rw = save_thm ("lookup_tenv_rw", lookup_tenv_rw);
val lookup_tenv_ind_rw = save_thm ("lookup_tenv_ind_rw", lookup_tenv_ind_rw);


(* val gst = Defn.tgoal_no_defn (num_tvs_def, num_tvs_ind) *)
val (num_tvs_rw, num_tvs_ind_rw) =
  Defn.tprove_no_defn ((num_tvs_def, num_tvs_ind),
    (* the termination proof *)
  )
val num_tvs_rw = save_thm ("num_tvs_rw", num_tvs_rw);
val num_tvs_ind_rw = save_thm ("num_tvs_ind_rw", num_tvs_ind_rw);


(* val gst = Defn.tgoal_no_defn (check_freevars_def, check_freevars_ind) *)
val (check_freevars_rw, check_freevars_ind_rw) =
  Defn.tprove_no_defn ((check_freevars_def, check_freevars_ind),
    (* the termination proof *)
  )
val check_freevars_rw = save_thm ("check_freevars_rw", check_freevars_rw);
val check_freevars_ind_rw = save_thm ("check_freevars_ind_rw", check_freevars_ind_rw);


(* val gst = Defn.tgoal_no_defn (type_subst_def, type_subst_ind) *)
val (type_subst_rw, type_subst_ind_rw) =
  Defn.tprove_no_defn ((type_subst_def, type_subst_ind),
    (* the termination proof *)
  )
val type_subst_rw = save_thm ("type_subst_rw", type_subst_rw);
val type_subst_ind_rw = save_thm ("type_subst_ind_rw", type_subst_ind_rw);


(* val gst = Defn.tgoal_no_defn (bind_var_list_def, bind_var_list_ind) *)
val (bind_var_list_rw, bind_var_list_ind_rw) =
  Defn.tprove_no_defn ((bind_var_list_def, bind_var_list_ind),
    (* the termination proof *)
  )
val bind_var_list_rw = save_thm ("bind_var_list_rw", bind_var_list_rw);
val bind_var_list_ind_rw = save_thm ("bind_var_list_ind_rw", bind_var_list_ind_rw);


(* val gst = Defn.tgoal_no_defn (bind_var_list2_def, bind_var_list2_ind) *)
val (bind_var_list2_rw, bind_var_list2_ind_rw) =
  Defn.tprove_no_defn ((bind_var_list2_def, bind_var_list2_ind),
    (* the termination proof *)
  )
val bind_var_list2_rw = save_thm ("bind_var_list2_rw", bind_var_list2_rw);
val bind_var_list2_ind_rw = save_thm ("bind_var_list2_ind_rw", bind_var_list2_ind_rw);


(* val gst = Defn.tgoal_no_defn (is_value_def, is_value_ind) *)
val (is_value_rw, is_value_ind_rw) =
  Defn.tprove_no_defn ((is_value_def, is_value_ind),
    (* the termination proof *)
  )
val is_value_rw = save_thm ("is_value_rw", is_value_rw);
val is_value_ind_rw = save_thm ("is_value_ind_rw", is_value_ind_rw);




val _ = export_theory()

