INCLUDES=.. ../semantics ../semantics/proofs ../lem_lib_stub
OPTIONS = QUIT_ON_FAILURE

SEMI = lib tokens ast semanticPrimitives smallStep bigStep typeSystem
SRC = bigSmallInvariants typeSoundInvariants
LEMI = $(patsubst %,../semantics/%.lem,$(SEMI))
LEMS = $(patsubst %,%.lem,$(SRC))
GENS = $(patsubst %,%Script.sml,$(SRC))

$(GENS) : $(LEMI) $(LEMS)
	if type lem;\
	then lem -auxiliary_level none $(patsubst %,-i %,$(LEMI)) $(patsubst %,-hol %,$(LEMS));\
	else touch $(GENS); fi

ifdef POLY
HOLHEAP = heap
PARENTHEAP = ../semantics/proofs/heap
EXTRA_CLEANS = $(HOLHEAP) $(HOLHEAP).o

PRE_BARE_THYS = libPropsTheory \
		bigClockTheory \
		astPropsTheory \
		compute_interpLib

BARE_THYS = $(patsubst %,../semantics/proofs/%,$(PRE_BARE_THYS))

DEPS = $(patsubst %,%.uo,$(BARE_THYS)) $(PARENTHEAP)

$(HOLHEAP): $(DEPS)
	$(protect $(HOLDIR)/bin/buildheap) -b $(PARENTHEAP) -o $(HOLHEAP) $(BARE_THYS)
endif

